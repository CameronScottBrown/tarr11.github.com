<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mvcoders | Douglas Tarr]]></title>
  <link href="http://douglastarr.com/categories/mvcoders/atom.xml" rel="self"/>
  <link href="http://douglastarr.com/"/>
  <updated>2013-12-02T08:51:48-08:00</updated>
  <id>http://douglastarr.com/</id>
  <author>
    <name><![CDATA[Douglas Tarr]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Scratch Variables and Lists - Coding Class Week 5]]></title>
    <link href="http://douglastarr.com/scratch-variables-and-lists-coding-class-week-5/"/>
    <updated>2013-11-27T13:44:00-08:00</updated>
    <id>http://douglastarr.com/scratch-variables-and-lists-coding-class-week-5</id>
    <content type="html"><![CDATA[<p>This week we learned about variables and lists.</p>

<h2>How Computers Work</h2>

<p>We watched this Ted video on how computers work.  I&rsquo;m not sure any of it sunk in, but it was a good way to visualize how a computer processes things.</p>

<iframe width="560" height="315" src="http://douglastarr.com//www.youtube.com/embed/AkFi90lZmXA" frameborder="0" allowfullscreen></iframe>


<h2>Keeping Score</h2>

<p>Rather than present variables as an abstract concept, I asked the kids if they wanted to keep score in their games.  Most of them did, a few weren&rsquo;t sure.</p>

<p>So, we made a game this week where we made a map, animated a sprite, and collected coins, which would increase their score.</p>

<p>Once their score got a certain point, they would win.</p>

<p>Here&rsquo;s an example from one of the students
<img src="/images/coin-game.png" alt="Coin Game" /></p>

<h2>Math, Physics, Art, and Communication</h2>

<p>I&rsquo;ve noticed that the kids have to quickly learn a lot of advanced concepts in order to make their game work.  For example, they have to understand negative numbers, multiplication, and graphs.</p>

<p>They inevitably start to make fairly complex designs, and they have to learn how to keep things organized and modular.</p>

<p>Several kids have wanted to make their character &ldquo;jump&rdquo;, which involves simulating physics (gravity, velocity, etc)</p>

<p>It&rsquo;s pretty amazing what they will learn quickly enough if they are motivated.</p>

<p>My sense is that programming games is a great way to teach just about any subject at this age.  They have to quickly master a concept and if they don&rsquo;t, their program won&rsquo;t work.</p>

<h2>Finishing our game</h2>

<p>At this point, the kids may not know it, but they&rsquo;ve got a completely working game!  We will spend the remaining few weeks fine tuning our games and adding more features.</p>

<h2>Code Club HQ</h2>

<p>I&rsquo;ve rented a space for Code Club Headquarters, at 38 Miller Ave in Mill Valley.  I&rsquo;m very excited to put some cool stuff in there and run a few more classes.</p>

<p>Follow along here on this blog and <a href="http://facebook.com/mvcodeclub">become a fan on Facebook</a></p>

<p>If you live in Marin and are interested in having your child participate, please <a href="http://www.mvcodeclub.com/home/winterschedule">check out the schedule</a> on the <a href="http://www.mvcodeclub.com">mvcodeclub.com website</a></p>

<h2>Github</h2>

<p>As always, this class is available on <a href="https://github.com/tarr11/coding-lessons/blob/master/4th-grade-coders/lesson-5.md">Github</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Messages and Animation - Coding Class Week 4]]></title>
    <link href="http://douglastarr.com/messages-and-animation-coding-class-week-4/"/>
    <updated>2013-11-21T08:30:00-08:00</updated>
    <id>http://douglastarr.com/messages-and-animation-coding-class-week-4</id>
    <content type="html"><![CDATA[<p>The past 3 weeks, the kids have been learning a lot of things.  How to interact with Scratch, basic programming concepts, and some basic computer skills.</p>

<p>This week, we spent a little time learning something new (events and message passing) but most of the time, I wanted the kids to be focused on building something.</p>

<h2>Unity Video</h2>

<p>We watched this short time lapse video of someone building a game scene in Unity 3D. This looks more like the games that they play on consoles at home.</p>

<iframe width="560" height="315" src="http://douglastarr.com//www.youtube.com/embed/Z2ZX9soqOz4" frameborder="0" allowfullscreen></iframe>


<h2>Message Passing</h2>

<p>Our goal this week was for the kids to learn about how to animate a story.  The tools in Scratch for doing this are pretty light &ndash; they don&rsquo;t really support a timeline UI for keyframing, so there&rsquo;s a lot of manual counting going on in order to synchronize your characters.</p>

<p>I wanted to teach them about message passing, which is a powerful concept that lets them control their animations via events, as opposed to trying to coordinate timing.</p>

<h2>Animation Challenge</h2>

<p>I presented the kids with a challenge &ndash; they had to animate a story, but they were only allowed to press one button to start it, and then it needed to run on its own (sort of like tipping over dominoes)
<img src="/images/dominoes.jpg" alt="Dominoes" /></p>

<p>They had gotten comfortable with event based processing, where they were controlling the animation sort of like a puppet show.  ie., press &ldquo;j&rdquo; and a character will jump.  I wanted them to use messages to instead say &ldquo;when this sprite is finished, it broadcasts a message&rdquo;.  And then, another sprite would listen for that</p>

<p>They spent much of the class working in teams of two, coming up with a story and then trying to animate it.  I liked this model because they would learn based on what they needed, as opposed to just going through and learning every command in the platform.</p>

<p>They loved to record sounds and have their characters do things together.</p>

<p>Here&rsquo;s an example of one of the animations (based on Pokemon) the kids put together:</p>

<iframe allowtransparency="true" width="485" height="402" src="http://scratch.mit.edu/projects/embed/14440381/?autostart=false" frameborder="0" allowfullscreen></iframe>


<p>Pretty impressive for some 4th graders who did this in about an hour!</p>

<h2>Computers, Creativity, Collaboration and Communication</h2>

<p>I spent some time thinking about the the role of a computer in the creative process.  There is a danger that because computers are powerful devices, they can have a hypnotic effect on the kids.</p>

<p>I wanted the kids to think about what they wanted to build, instead of just clicking around the computer.  This is an important skill for them to learn &ndash; these are just tools and they need to use the tools, not have the tools use them.</p>

<p>So, they spent a few minutes discussing what they wanted to build.  This was somewhat challenging and overwhelming.  A lot of them just wanted to mess around and build it that way.  I think that&rsquo;s fine, but I also wanted them to have their own point of view.</p>

<p>Some of the kids have more experience than others, and I wanted them to learn how to work together and teach each other.  If they are just working alone, they might as well be at home!  So, I spend some time each class trying to get them to work together, communicate, and solve problems together.  Since I&rsquo;ve put them on time limits for this project, that can be somewhat stressful.</p>

<p>It&rsquo;s a good skill for them to learn how to manage their time and their communication under time pressure.</p>

<h2>Advanced Class + Another Intro Class In January</h2>

<p>We are going to have an advanced class starting in January.  I think it still will be focused around Scratch &ndash; there is a lot to learn here and I&rsquo;d like them to get a bit more mastery before we move on to more complex topics.</p>

<p>I&rsquo;m also thinking about running another Intro class &ndash; this is for 4th graders, but it could also work for 3rd and 5th graders as well.  I&rsquo;m hoping to include more girls as well, to balance things out.</p>

<p>If you are interested, please <a href="/contact.html">contact me</a></p>

<h2>Mill Valley Code Club Website, Facebook, and HQ</h2>

<p>I&rsquo;ve finally got a the <a href="http://www.mvcodeclub.com">Mill Valley Code Club Website</a> setup.  This is where the kids log in, keep notes, and learn about new lessons.  I&rsquo;ll probably improve it more over time.</p>

<p>Also, I&rsquo;ve setup a <a href="http://www.facebook.com/mvcodeclub">Facebook Page</a> and a <a href="http://twitter.com/mvcodeclub">Twitter</a> if you are interested in following along.</p>

<h2>Code Club HQ?</h2>

<p>I am looking at renting out a small space in downtown Mill Valley, to run Code Club classes.  We&rsquo;ve been running out of my house which has been fine, but things get a little hectic, and there&rsquo;s a lot of setup and teardown that I have to do in our living room.</p>

<p>If we have a space, I can add some better hardware.  I have my eye on a <a href="http://www.makerbot.com">Makerbot</a> for example, which would be a fun thing for the kids to play with.</p>

<p>I&rsquo;ll probably also get a server that we can run Minecraft on, and a bunch of other fun stuff like <a href="http://arduino.cc">Arduino</a>, <a href="http://www.raspberrypi.org">Raspberry Pi</a> etc.</p>

<h2>Github</h2>

<p>As always, <a href="https://github.com/tarr11/coding-lessons/blob/master/4th-grade-coders/lesson-4.md">this weeks lesson plan</a> is on Github.  Enjoy!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Drawing and Painting - Coding Class Week 3]]></title>
    <link href="http://douglastarr.com/drawing-and-painting-coding-class-week-3/"/>
    <updated>2013-11-15T08:52:00-08:00</updated>
    <id>http://douglastarr.com/drawing-and-painting-coding-class-week-3</id>
    <content type="html"><![CDATA[<p>Originally, my plan for this week was to run a series of Scratch Challenges (make an animated story, a maze, etc).</p>

<p> I had Eli try one out, and I quickly realized that a lot of time is spent on creating sprites.  So, I decided to completely focus the class on drawing and painting.</p>

<p>To start the class, we watched this timelapse video of someone making a game character in Illustrator.</p>

<iframe width="560" height="315" src="http://douglastarr.com//www.youtube.com/embed/k2xYSCNysS0" frameborder="0" allowfullscreen></iframe>


<p>This gave the kids an idea of what is possible.  Timelapse videos have a &ldquo;magic&rdquo; to them and I noticed that the kids were mesmerized by it.  They were certainly still chatting and joking (&ldquo;hey that kind of looks like the guy who works at Jamba Juice!&rdquo;) but they were paying attention.</p>

<h2>Drawing and Painting Happy Faces in Scratch</h2>

<p>It turns out that Scratch comes with a fairly decent draw/paint tool.  It&rsquo;s like a simplified version of Adobe Illustrator / Photoshop.</p>

<p>When presented with a drawing or painting tool online, kids immediately just go for a paintbrush and predictably have a hard time making something look good.</p>

<p>Pictures of faces tend to look like very messy.  I had the kids go through and try to make &ldquo;better&rdquo; happy faces so that they could understand why it&rsquo;s better to use vector based methods for drawing instead of bitmap methods.</p>

<p>My goal for the class was to get them to understand what the tools (especially the vector tools) do so that they could make and remix existing vector illustrations.</p>

<p>We learned about painting (bitmaps) and drawing (vectors) and what you could do with each.</p>

<p><img src="/images/animation.gif" alt="Happy Face Progression" /></p>

<p>We learned how to make shapes, fill them in, resize and reshape them.  We also learned how to group and ungroup shapes in vector mode, and the difference between resizing shapes in bitmap vs vector.</p>

<h2>Remixing</h2>

<p>The &ldquo;a-ha&rdquo; moment of the class was then they realized that they could go to the Scratch sprite library, grab a vector based sprite, and then &ldquo;re-mix&rdquo; it to their needs.
<img src="/images/gobo-anim.gif" alt="Gobo" /></p>

<p>We had about 5 or 10 minutes at the end &ndash; I asked the kids to try and make a few drawings and see if they could animate them (using what they learned from last week)  A few of them (who were more comfortable) were able to do this.  Most had a hard time recalling how to connect these two things.</p>

<h2>Speed, Focus and Fun</h2>

<p>We&rsquo;re still having some challenges around getting everyone to focus.  I find myself having to use &ldquo;teacher-voice&rdquo; more than I&rsquo;d like.  I could see some yawns at the beginning of class after a hard day at school.</p>

<p>I&rsquo;ve also noticed that sometimes, the kids just are in there, doing their own thing, and not totally paying attention to what I&rsquo;m having them learn.  That&rsquo;s ok (that&rsquo;s exactly how I was as a kid their age), but I try to go around and make sure everyone gets the gist of the lesson.</p>

<p>And then there was this&hellip;</p>

<blockquote class="twitter-tweet"><p>OH in <a href="https://twitter.com/search?q=%23mvcodeclub&amp;src=hash">#mvcodeclub</a> yesterday - &quot;OOOOH, If I make the boogers into sprites, I can make them drip down the squirrel&#39;s nose!&quot;</p>&mdash; Douglas Tarr (@tarr11) <a href="https://twitter.com/tarr11/statuses/400341894791589888">November 12, 2013</a></blockquote>


<script async src="http://douglastarr.com//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>We are literally blazing through Scratch in a really short time.  These kids are learning a lot quickly, but that does lead to some frustration when they don&rsquo;t pick something up as quickly as they&rsquo;d like.</p>

<p>I can sometimes see some frustration when it takes a little longer than they had hoped to figure something out.  It&rsquo;s ok if they don&rsquo;t &ldquo;perfect&rdquo; a skill before moving on to the next one.  I can sense that some of them want to spend more time before moving on.</p>

<p>That said, it seems like everyone is having a great time.</p>

<h2>Next Week</h2>

<p>Next week we are going to work together on teams.  We&rsquo;ll use some of the lessons that we learned to do some challenges together.</p>

<h2>Github</h2>

<p>As always, this lesson is available on Github here &ndash; <a href="https://github.com/tarr11/coding-lessons/blob/master/4th-grade-coders/lesson-3.md">Lesson 3 on Github</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Intro to Scratch - Coding Class Week 2]]></title>
    <link href="http://douglastarr.com/intro-to-scratch-coding-class-week-2/"/>
    <updated>2013-11-08T09:03:00-08:00</updated>
    <id>http://douglastarr.com/intro-to-scratch-coding-class-week-2</id>
    <content type="html"><![CDATA[<p>This was the second week of my <a href="/categories/mvcoders">8 Week Coding Class for 4th Graders</a></p>

<p>This class started a bit more chaotic than the <a href="/coding-class-week-1/">first week</a>.</p>

<h2>Code Club Philosophy</h2>

<p>I&rsquo;m not really teaching a class, I&rsquo;m <a href="/3-types-of-programming-classes-for-kids/">running a club</a>, and I don&rsquo;t really care if they learn computer science fundamentals.</p>

<p>I want the kids to:</p>

<ul>
<li>have fun</li>
<li>build things</li>
</ul>


<p>If those two things happen, they&rsquo;ll naturally be more interested.  If they get &ldquo;hooked&rdquo;, they&rsquo;ll be more motiviated to learn more complicated computer science topics.</p>

<h3>Don&rsquo;t worry about how it works.  Just go.</h3>

<p>When learning to drive a car, the focus is on getting the car from point A to point B.</p>

<p>You don&rsquo;t need to know how to use the defroster, how the automatic transmission functions, or the biography of Enzo Ferrari.</p>

<p>And, unlike a car, it&rsquo;s ok if you write some code and it immediately crashes.</p>

<p>So, I&rsquo;m running the class by giving them the keys and letting them drive.  They&rsquo;ll figure out how things work later.</p>

<p>I can tell there is a tremendous sense of empowerment and joy when they realize that they get to do what they want.</p>

<p>It&rsquo;s a bit chaotic at first, as they start honking the horn, gunning the engine, and laughing uncontrollably.</p>

<p>Fortunately, they don&rsquo;t get into any major accidents.</p>

<h2>Chat</h2>

<p>For one of the classes, I wired up a chat program using <a href="http://togetherjs.com">TogetherJs</a>  The kids LOVED it, but it was big mistake.  As soon as they saw a chat window, they went crazy chatting with each other and paid no attention to me.  TogetherJs is also not just a simple chat program &ndash; it lets each kid control other screens.</p>

<p>As you can imagine&hellip; this didn&rsquo;t work out so well.</p>

<p>It took me about 10 minutes to reel them back in.  I think chat is a valuable tool, but I&rsquo;ll need to rethink how I can use it.</p>

<h2>12 year old app developer</h2>

<p>We watched <a href="http://www.youtube.com/watch?v=Fkd9TWUtFm0">this video about a 12 year old app developer</a>.  The kids <em>kind of</em> liked it, but I think the reception was kind of muted.  We need better videos.</p>

<p>If you know of short videos that might appeal to kids to learn code, please share them in the comments.</p>

<h2>Learning about Loops and Commands</h2>

<p>I didn&rsquo;t really want to spend a lot of time talking, maybe 5 or 10 minutes at most.  It is really hard to have a conversation with them when there are laptops sitting in front of them.</p>

<p>We talked a little bit about loops, commands and programs, and how they fit together.</p>

<p>These kids are all fantastic students.  I can tell that they are all pretty well behaved in the classroom, and they respond to &ldquo;classroom-like&rdquo;&ldquo; questions pretty well.</p>

<p>I think it&rsquo;s important to have them talk for a few minutes, if only to get them calmed down and thinking about computers.</p>

<h2>Learning Scratch</h2>

<p>This week, we started to use <a href="http://scratch.mit.edu">MIT Scratch</a> which is a visual programming environment with a rich curriculum, geared towards children.</p>

<p><img src="http://scratchdaysiegen.files.wordpress.com/2011/12/scratch-cat.jpg" alt="Scratch Logo" /></p>

<p>I decided to run this class mostly by following the <a href="http://cdn.scratch.mit.edu/scratchr2/static/__1383932368__//pdfs/help/Getting-Started-Guide-Scratch2.pdf">Getting Started</a> intro on the Scratch website.</p>

<p>The Getting Started Tutorial teaches them how to:</p>

<ul>
<li>move a sprite around</li>
<li>manipulate &ldquo;code blocks&rdquo;</li>
<li>use a &ldquo;repeat&rdquo; control block</li>
<li>change sprite colors</li>
<li>make sounds</li>
<li>change backgrounds</li>
<li>response to some basic user input.</li>
</ul>


<p>I had wanted to get further, but it was clear that this was how far we were going to get.</p>

<p>Since some of the kids had &ldquo;played&rdquo; with Scratch before, I let them go faster, so they wouldn&rsquo;t be bored.</p>

<h2>Tips and Tricks</h2>

<ul>
<li>Kids should have a mouse. It&rsquo;s really hard to manipulate Scratch with a touchpad.</li>
<li>If some kids get too far ahead, use them as teaching assistants to help the other kids

<ul>
<li>This helps the further ahead kids since they have to explain what they are doing and will learn more.</li>
<li>It helps the other kids catch up.</li>
<li>And it helps me keep control of the class.</li>
</ul>
</li>
<li>Windows 8 is kind of difficult for kids to use.  There are lots of weird swipes that cause the tile screen to show up.</li>
<li>Chromebooks are actually fine.</li>
<li>If you are teaching kids Scratch, these are the things that tripped them up:

<ul>
<li>Separating Blocks and Removing them</li>
<li>Their sprites would fall off the screen, and we had to figure out how to get them back.</li>
<li>They&rsquo;d add some new sprites to the screen and they couldn&rsquo;t figure out how to delete them</li>
</ul>
</li>
<li>By 4th grade, they are all pretty adept at finding videos and images on YouTube.</li>
<li>At the end of the class, I have them type up some notes about what they learned and save them with each lesson.  This helps them think about what they accomplished.</li>
</ul>


<h2>Stories from the kids</h2>

<p>A few kids had used Scratch before and had some &ldquo;tricks&rdquo; up their sleeves.  I saw a few memes I recognized from Reddit.</p>

<p>One of the students in the class learned how to make animations by stringing three drawings together and rotating through them.  Pretty amazing.</p>

<p>A few kids were a little disappointed that we weren&rsquo;t doing CodeCombat again in class.</p>

<h2>On Github</h2>

<p>As with the <a href="/an-open-source-coding-curriculum/">rest of this class</a>, <a href="https://github.com/tarr11/coding-lessons/blob/master/4th-grade-coders/lesson-2.md">This week&rsquo;s curriculum</a> is available on Github.</p>

<h2>Next Week</h2>

<p>Next week the kids are going to team up into groups of 2 and I&rsquo;m going to give them a few challenges using the skills that they learned, and maybe one or two new ones.</p>

<h2>Suggestions and Resources</h2>

<p>If you have any suggestions for the class, or resources to share, please do so in the comments below.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coding Class Week 1]]></title>
    <link href="http://douglastarr.com/coding-class-week-1/"/>
    <updated>2013-11-01T09:21:00-07:00</updated>
    <id>http://douglastarr.com/coding-class-week-1</id>
    <content type="html"><![CDATA[<p>This was the first week of my <a href="/categories/mvcoders">8 Week Coding Class for 4th Graders</a></p>

<p>I ran 2 classes after school (about 5 kids per class) after school.  I was a bit nervous to get started as I had no idea what was going to happen, or if the kids were going to get bored.  We followed the plan that I laid out in my <a href="https://github.com/tarr11/coding-lessons/blob/master/4th-grade-coders/lesson-1.md">the fourth grade coding curriculum</a> on Github, with a few modifications.</p>

<h2>After school</h2>

<p>Getting everyone to focus at the beginning was tough.  They came directly from school and were a little bit rambunctious from sitting in class all day.  Some kids immediately booted up their laptops to play a video game and I had to tell them not to.</p>

<h2>Computers</h2>

<p>I asked the kids to bring their own laptops if possible.  I have a series of old laptops and fortunately, most of them worked, even if they were a little bit slow.   I needed Google Chrome installed on each computer, which I had to install on a few of their laptops.</p>

<p>I&rsquo;ve decided to avoid using any native shell programs since they aren&rsquo;t going to be the same amongst all the laptops that the kids have.  For example, I&rsquo;ve had kids bring Macbooks, Chromebooks and Windows 7 and 8 laptops.  Even trying to get a <a href="http://www.gnu.org/software/bash/">bash shell</a> running on all those environments would have been tough.</p>

<p>In the future, I may look at <a href="http://nitrous.io">Nitrous.io</a> if I do want a terminal that they can all use.  I tried out making a &ldquo;Hello World&rdquo; <a href="http://voxeljs.com">Voxel.js</a> / <a href="http://nodejs.org">Node.js</a> with Nitrous, and that worked.  I may use that in a future class, to show them how you can code your own Minecraft world.</p>

<h2>Introduction</h2>

<p>I asked the kids what they thought programming was.  Some named programming languages like HTML.  One mentioned &ldquo;The Matrix&rdquo; and how they used progrmaming there. A few said Minecraft.  Some said it was a way to get computers to do what you want.  A few had no idea.</p>

<p>I asked them what they wanted to do in the class?  In the first class, they all unanimously said &ldquo;make video games&rdquo;.  Some had very specific ideas about the games that they wanted to make.  In the second class, it was a mix.  One wanted to make a very specific Minecraft plugin that made it easy and safe to make other Minecraft plugins.  One wanted to make it safer to use computers online (he was on a Windows 8 laptop, FWIW).  The rest wanted to make video games.</p>

<p>They responded well (&ldquo;woohoo!&rdquo;) when I told them that this wasn&rsquo;t going to be like a normal class in school where you had to listen to a teacher talk, and that they&rsquo;d spend a lot of time coding.  That said, I did have to calm them down periodically, just like any class.</p>

<h2>ChromeCast</h2>

<p>The class was in our living room, and I used my laptop + <a href="http://www.google.com/intl/en/chrome/devices/chromecast/">ChromeCast</a> to show them videos and code samples on the screen.  This worked out really well &ndash; we watched the <a href="http://www.youtube.com/watch?v=nKIu9yen5nc">Code.org video</a> in one of the classes, and the kids responded really well to seeing Bill Gates and Mark Zuckerberg on the screen, talking about coding.</p>

<h2>CodeCombat</h2>

<p><img src="https://github-camo.global.ssl.fastly.net/5cbc6e9e49ea8cecd35303f9e62bf27cda4edefa/687474703a2f2f692e696d6775722e636f6d2f496c76373352382e706e67" alt="Code Combat Screenshot" /></p>

<p>A few weeks ago, on <a href="http://news.ycombinator.com">Hacker News</a>, I heard about a cool site called <a href="http://codecombat.com">CodeCombat</a> which teaches kids some javascript and coding fundamentals.  There are a series of &ldquo;challenges&rdquo; that the kids have to go through, such as having their knight defeat a troll, move around a maze, and say various things in order.   Overall &ndash; the kids LOVED this game and had a lot of fun.  I think they didn&rsquo;t even realize that they were learning coding.  I heard from one parent that their kid had a lot of fun but didn&rsquo;t learn much. I think this was because they thought they were just playing a game.  But in order to play the game, you have to write a lot of javascript, understand logic flow and how to construct and debug a sophisticated program.  So, I considered it a success because it was a lot of fun.</p>

<p>That said, running the class reminded me of the game <a href="http://en.wikipedia.org/wiki/Diner_Dash">Diner Dash</a> for a while. In that game, you are a waitress, and your job is to take and serve complex orders in a diner very quickly.  If you mess up the orders or take too long, customers get mad.  If you do everything right, you get points. I found that with 5 or 6 kids, especially as they get going, they are hitting roadblocks about every minute.   Most of these involved some sort of debugging of their javascript code.  They would say &ldquo;It&rsquo;s not working&rdquo; and I&rsquo;d come over and try to help them figure out what&rsquo;s wrong.   If I spent too much time helping one student, the bugs would back up and I&rsquo;d have a lot of kids unhappy.  If the kids were blocked for too long, they would get frustrated.</p>

<p>One thing I am not sure about is how someone with no programming experience can help kids.  Most of the problems that I was solving for were debugging issues.  These are easy for developers to solve (sometimes) but sometimes they are not!  Some of these problems could be resolved with a more sophisticated user interface.  But making debugging &ldquo;easy&rdquo; is a famously hard problem in computer science.  One example of this problem is the <a href="http://en.wikipedia.org/wiki/Halting_problem">halting problem</a>  Ie, trying to detect if a computer is stuck in an infinite loop.   I think this gets easier with visual programming languages since it&rsquo;s easier to stay &ldquo;on the rails&rdquo;.  But, much of the power of coding is still in language based coding, so I want to balance out these two techniques.</p>

<p>That said, whenever the kids solved a problem on their own (ie, fixed a missing parentheses, semicolon, or capitalization), they would get very excited that they accomplished something.  CodeCombat also did a good job of helping them celebrate their victories by showing them a little animation of their knight crushing the enemy or winning.</p>

<h2>Browser Based Coding</h2>

<p>CodeCombat uses two windows &ndash; a game and a javascript editor in a browser.  This does present some challenges.  The coding window loses focus a lot, and the kids expect when they start typing, sometimes nothing would happen.  The game would occasionally get stuck, or the browser would get wonky, and I&rsquo;d have to reset the screen.   At this age (9 + 10 years old), this would be a tough game for the kids to learn without my help.</p>

<p>The kids also needed to learn to type like a software developer would.  Learning how to type as a coder is different than typing words.  I am not teaching them to use advanced coding motions (ie, <a href="http://www.vim.org/">vim</a> ) but there are a set of things that they need to code javascript.  For example, they need to know various characters &ndash; parentheses, semicolon, single and double quotes.  They need to know how to position the cursor on a line and insert a new line below it.  They need to know how to &ldquo;pronounce&rdquo; code.  ie, when I asked them to pronounce &ldquo;this.moveNext();&rdquo;, they said &ldquo;this period move next parentheses parentheses semicolon&rdquo;.   Teaching them how &ldquo;talk in code&rdquo; was a surprising thing that was important to teach.</p>

<h2>CodeClub Software</h2>

<p><img src="https://lh5.googleusercontent.com/-YV1ZHLB3uao/UnGDazlwlCI/AAAAAAAAYlE/K5tPI5iS5JM/w1623-h1217-no/20131030_150608.jpg" alt="CodeClub Software on ChromeCast" /></p>

<p>I&rsquo;ve built a little ASP.NET MVC website that gives them logins, lets them take notes, and then guides them through the class using the curriculum that I put on Github.   This mostly worked, but there was a bug in the first class where some of their notes didn&rsquo;t save.   This software is really valuable for parents to see what&rsquo;s going on, and it gives me a way to communicate and guide the class.  This code isn&rsquo;t available yet but I plan to put it online in a few weeks.</p>

<h2>Second Class</h2>

<p>The goal of the next class is to introduce them to <a href="http://scratch.mit.edu">MIT Scratch</a> which is a visual environment for learning to make games and animations.  I&rsquo;m working on the curriculum now, so check back in a week or so to see how that went.</p>
]]></content>
  </entry>
  
</feed>
