<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Douglas Tarr]]></title>
  <link href="http://douglastarr.com/atom.xml" rel="self"/>
  <link href="http://douglastarr.com/"/>
  <updated>2013-11-08T10:15:00-08:00</updated>
  <id>http://douglastarr.com/</id>
  <author>
    <name><![CDATA[Douglas Tarr]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Intro to Scratch - Coding Class Week 2]]></title>
    <link href="http://douglastarr.com/intro-to-scratch-coding-class-week-2/"/>
    <updated>2013-11-08T09:03:00-08:00</updated>
    <id>http://douglastarr.com/intro-to-scratch-coding-class-week-2</id>
    <content type="html"><![CDATA[<p>This was the second week of my <a href="http://douglastarr.com/categories/mvcoders">8 Week Coding Class for 4th Graders</a></p>

<p>This class started a bit more chaotic than the <a href="http://douglastarr.com/coding-class-week-1/">first week</a>.</p>

<h2>Code Club Philosophy</h2>

<p>I&rsquo;m not really teaching a class, I&rsquo;m <a href="http://douglastarr.com/3-types-of-programming-classes-for-kids/">running a club</a>, and I don&rsquo;t really care if they learn computer science fundamentals.</p>

<p>I want the kids to:</p>

<ul>
<li>have fun</li>
<li>build things</li>
</ul>


<p>If those two things happen, they&rsquo;ll naturally be more interested.  If they get &ldquo;hooked&rdquo;, they&rsquo;ll be more motiviated to learn more complicated computer science topics.</p>

<h3>Don&rsquo;t worry about how it works.  Just go.</h3>

<p>When learning to drive a car, the focus is on getting the car from point A to point B.</p>

<p>You don&rsquo;t need to know how to use the defroster, how the automatic transmission functions, or the biography of Enzo Ferrari.</p>

<p>And, unlike a car, it&rsquo;s ok if you write some code and it immediately crashes.</p>

<p>So, I&rsquo;m running the class by giving them the keys and letting them drive.  They&rsquo;ll figure out how things work later.</p>

<p>I can tell there is a tremendous sense of empowerment and joy when they realize that they get to do what they want.</p>

<p>It&rsquo;s a bit chaotic at first, as they start honking the horn, gunning the engine, and laughing uncontrollably.</p>

<p>Fortunately, they don&rsquo;t get into any major accidents.</p>

<h2>Chat</h2>

<p>For one of the classes, I wired up a chat program using <a href="http://togetherjs.com">TogetherJs</a>  The kids LOVED it, but it was big mistake.  As soon as they saw a chat window, they went crazy chatting with each other and paid no attention to me.  TogetherJs is also not just a simple chat program &ndash; it lets each kid control other screens.</p>

<p>As you can imagine&hellip; this didn&rsquo;t work out so well.</p>

<p>It took me about 10 minutes to reel them back in.  I think chat is a valuable tool, but I&rsquo;ll need to rethink how I can use it.</p>

<h2>12 year old app developer</h2>

<p>We watched <a href="http://www.youtube.com/watch?v=Fkd9TWUtFm0">this video about a 12 year old app developer</a>.  The kids <em>kind of</em> liked it, but I think the reception was kind of muted.  We need better videos.</p>

<p>If you know of short videos that might appeal to kids to learn code, please share them in the comments.</p>

<h2>Learning about Loops and Commands</h2>

<p>I didn&rsquo;t really want to spend a lot of time talking, maybe 5 or 10 minutes at most.  It is really hard to have a conversation with them when there are laptops sitting in front of them.</p>

<p>We talked a little bit about loops, commands and programs, and how they fit together.</p>

<p>These kids are all fantastic students.  I can tell that they are all pretty well behaved in the classroom, and they respond to &ldquo;classroom-like&rdquo;&ldquo; questions pretty well.</p>

<p>I think it&rsquo;s important to have them talk for a few minutes, if only to get them calmed down and thinking about computers.</p>

<h2>Learning Scratch</h2>

<p>This week, we started to use <a href="http://scratch.mit.edu">MIT Scratch</a> which is a visual programming environment with a rich curriculum, geared towards children.</p>

<p><img src="http://scratchdaysiegen.files.wordpress.com/2011/12/scratch-cat.jpg" alt="Scratch Logo" /></p>

<p>I decided to run this class mostly by following the <a href="http://cdn.scratch.mit.edu/scratchr2/static/__1383932368__//pdfs/help/Getting-Started-Guide-Scratch2.pdf">Getting Started</a> intro on the Scratch website.</p>

<p>The Getting Started Tutorial teaches them how to:</p>

<ul>
<li>move a sprite around</li>
<li>manipulate &ldquo;code blocks&rdquo;</li>
<li>use a &ldquo;repeat&rdquo; control block</li>
<li>change sprite colors</li>
<li>make sounds</li>
<li>change backgrounds</li>
<li>response to some basic user input.</li>
</ul>


<p>I had wanted to get further, but it was clear that this was how far we were going to get.</p>

<p>Since some of the kids had &ldquo;played&rdquo; with Scratch before, I let them go faster, so they wouldn&rsquo;t be bored.</p>

<h2>Tips and Tricks</h2>

<ul>
<li>Kids should have a mouse. It&rsquo;s really hard to manipulate Scratch with a touchpad.</li>
<li>If some kids get too far ahead, use them as teaching assistants to help the other kids

<ul>
<li>This helps the further ahead kids since they have to explain what they are doing and will learn more.</li>
<li>It helps the other kids catch up.</li>
<li>And it helps me keep control of the class.</li>
</ul>
</li>
<li>Windows 8 is kind of difficult for kids to use.  There are lots of weird swipes that cause the tile screen to show up.</li>
<li>Chromebooks are actually fine.</li>
<li>If you are teaching kids Scratch, these are the things that tripped them up:

<ul>
<li>Separating Blocks and Removing them</li>
<li>Their sprites would fall off the screen, and we had to figure out how to get them back.</li>
<li>They&rsquo;d add some new sprites to the screen and they couldn&rsquo;t figure out how to delete them</li>
</ul>
</li>
<li>By 4th grade, they are all pretty adept at finding videos and images on YouTube.</li>
<li>At the end of the class, I have them type up some notes about what they learned and save them with each lesson.  This helps them think about what they accomplished.</li>
</ul>


<h2>Stories from the kids</h2>

<p>A few kids had used Scratch before and had some &ldquo;tricks&rdquo; up their sleeves.  I saw a few memes I recognized from Reddit.</p>

<p>One of the students in the class learned how to make animations by stringing three drawings together and rotating through them.  Pretty amazing.</p>

<p>A few kids were a little disappointed that we weren&rsquo;t doing CodeCombat again in class.</p>

<h2>On Github</h2>

<p>As with the <a href="http://douglastarr.com/an-open-source-coding-curriculum/">rest of this class</a>, <a href="https://github.com/tarr11/coding-lessons/blob/master/4th-grade-coders/lesson-2.md">This week&rsquo;s curriculum</a> is available on Github.</p>

<h2>Next Week</h2>

<p>Next week the kids are going to team up into groups of 2 and I&rsquo;m going to give them a few challenges using the skills that they learned, and maybe one or two new ones.</p>

<h2>Suggestions and Resources</h2>

<p>If you have any suggestions for the class, or resources to share, please do so in the comments below.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coding Class Week 1]]></title>
    <link href="http://douglastarr.com/coding-class-week-1/"/>
    <updated>2013-11-01T09:21:00-07:00</updated>
    <id>http://douglastarr.com/coding-class-week-1</id>
    <content type="html"><![CDATA[<p>This was the first week of my <a href="http://douglastarr.com/categories/mvcoders">8 Week Coding Class for 4th Graders</a></p>

<p>I ran 2 classes after school (about 5 kids per class) after school.  I was a bit nervous to get started as I had no idea what was going to happen, or if the kids were going to get bored.  We followed the plan that I laid out in my <a href="https://github.com/tarr11/coding-lessons/blob/master/4th-grade-coders/lesson-1.md">the fourth grade coding curriculum</a> on Github, with a few modifications.</p>

<h2>After school</h2>

<p>Getting everyone to focus at the beginning was tough.  They came directly from school and were a little bit rambunctious from sitting in class all day.  Some kids immediately booted up their laptops to play a video game and I had to tell them not to.</p>

<h2>Computers</h2>

<p>I asked the kids to bring their own laptops if possible.  I have a series of old laptops and fortunately, most of them worked, even if they were a little bit slow.   I needed Google Chrome installed on each computer, which I had to install on a few of their laptops.</p>

<p>I&rsquo;ve decided to avoid using any native shell programs since they aren&rsquo;t going to be the same amongst all the laptops that the kids have.  For example, I&rsquo;ve had kids bring Macbooks, Chromebooks and Windows 7 and 8 laptops.  Even trying to get a <a href="http://www.gnu.org/software/bash/">bash shell</a> running on all those environments would have been tough.</p>

<p>In the future, I may look at <a href="http://nitrous.io">Nitrous.io</a> if I do want a terminal that they can all use.  I tried out making a &ldquo;Hello World&rdquo; <a href="http://voxeljs.com">Voxel.js</a> / <a href="http://nodejs.org">Node.js</a> with Nitrous, and that worked.  I may use that in a future class, to show them how you can code your own Minecraft world.</p>

<h2>Introduction</h2>

<p>I asked the kids what they thought programming was.  Some named programming languages like HTML.  One mentioned &ldquo;The Matrix&rdquo; and how they used progrmaming there. A few said Minecraft.  Some said it was a way to get computers to do what you want.  A few had no idea.</p>

<p>I asked them what they wanted to do in the class?  In the first class, they all unanimously said &ldquo;make video games&rdquo;.  Some had very specific ideas about the games that they wanted to make.  In the second class, it was a mix.  One wanted to make a very specific Minecraft plugin that made it easy and safe to make other Minecraft plugins.  One wanted to make it safer to use computers online (he was on a Windows 8 laptop, FWIW).  The rest wanted to make video games.</p>

<p>They responded well (&ldquo;woohoo!&rdquo;) when I told them that this wasn&rsquo;t going to be like a normal class in school where you had to listen to a teacher talk, and that they&rsquo;d spend a lot of time coding.  That said, I did have to calm them down periodically, just like any class.</p>

<h2>ChromeCast</h2>

<p>The class was in our living room, and I used my laptop + <a href="http://www.google.com/intl/en/chrome/devices/chromecast/">ChromeCast</a> to show them videos and code samples on the screen.  This worked out really well &ndash; we watched the <a href="http://www.youtube.com/watch?v=nKIu9yen5nc">Code.org video</a> in one of the classes, and the kids responded really well to seeing Bill Gates and Mark Zuckerberg on the screen, talking about coding.</p>

<h2>CodeCombat</h2>

<p><img src="https://github-camo.global.ssl.fastly.net/5cbc6e9e49ea8cecd35303f9e62bf27cda4edefa/687474703a2f2f692e696d6775722e636f6d2f496c76373352382e706e67" alt="Code Combat Screenshot" /></p>

<p>A few weeks ago, on <a href="http://news.ycombinator.com">Hacker News</a>, I heard about a cool site called <a href="http://codecombat.com">CodeCombat</a> which teaches kids some javascript and coding fundamentals.  There are a series of &ldquo;challenges&rdquo; that the kids have to go through, such as having their knight defeat a troll, move around a maze, and say various things in order.   Overall &ndash; the kids LOVED this game and had a lot of fun.  I think they didn&rsquo;t even realize that they were learning coding.  I heard from one parent that their kid had a lot of fun but didn&rsquo;t learn much. I think this was because they thought they were just playing a game.  But in order to play the game, you have to write a lot of javascript, understand logic flow and how to construct and debug a sophisticated program.  So, I considered it a success because it was a lot of fun.</p>

<p>That said, running the class reminded me of the game <a href="http://en.wikipedia.org/wiki/Diner_Dash">Diner Dash</a> for a while. In that game, you are a waitress, and your job is to take and serve complex orders in a diner very quickly.  If you mess up the orders or take too long, customers get mad.  If you do everything right, you get points. I found that with 5 or 6 kids, especially as they get going, they are hitting roadblocks about every minute.   Most of these involved some sort of debugging of their javascript code.  They would say &ldquo;It&rsquo;s not working&rdquo; and I&rsquo;d come over and try to help them figure out what&rsquo;s wrong.   If I spent too much time helping one student, the bugs would back up and I&rsquo;d have a lot of kids unhappy.  If the kids were blocked for too long, they would get frustrated.</p>

<p>One thing I am not sure about is how someone with no programming experience can help kids.  Most of the problems that I was solving for were debugging issues.  These are easy for developers to solve (sometimes) but sometimes they are not!  Some of these problems could be resolved with a more sophisticated user interface.  But making debugging &ldquo;easy&rdquo; is a famously hard problem in computer science.  One example of this problem is the <a href="http://en.wikipedia.org/wiki/Halting_problem">halting problem</a>  Ie, trying to detect if a computer is stuck in an infinite loop.   I think this gets easier with visual programming languages since it&rsquo;s easier to stay &ldquo;on the rails&rdquo;.  But, much of the power of coding is still in language based coding, so I want to balance out these two techniques.</p>

<p>That said, whenever the kids solved a problem on their own (ie, fixed a missing parentheses, semicolon, or capitalization), they would get very excited that they accomplished something.  CodeCombat also did a good job of helping them celebrate their victories by showing them a little animation of their knight crushing the enemy or winning.</p>

<h2>Browser Based Coding</h2>

<p>CodeCombat uses two windows &ndash; a game and a javascript editor in a browser.  This does present some challenges.  The coding window loses focus a lot, and the kids expect when they start typing, sometimes nothing would happen.  The game would occasionally get stuck, or the browser would get wonky, and I&rsquo;d have to reset the screen.   At this age (9 + 10 years old), this would be a tough game for the kids to learn without my help.</p>

<p>The kids also needed to learn to type like a software developer would.  Learning how to type as a coder is different than typing words.  I am not teaching them to use advanced coding motions (ie, <a href="http://www.vim.org/">vim</a> ) but there are a set of things that they need to code javascript.  For example, they need to know various characters &ndash; parentheses, semicolon, single and double quotes.  They need to know how to position the cursor on a line and insert a new line below it.  They need to know how to &ldquo;pronounce&rdquo; code.  ie, when I asked them to pronounce &ldquo;this.moveNext();&rdquo;, they said &ldquo;this period move next parentheses parentheses semicolon&rdquo;.   Teaching them how &ldquo;talk in code&rdquo; was a surprising thing that was important to teach.</p>

<h2>CodeClub Software</h2>

<p><img src="https://lh5.googleusercontent.com/-YV1ZHLB3uao/UnGDazlwlCI/AAAAAAAAYlE/K5tPI5iS5JM/w1623-h1217-no/20131030_150608.jpg" alt="CodeClub Software on ChromeCast" /></p>

<p>I&rsquo;ve built a little ASP.NET MVC website that gives them logins, lets them take notes, and then guides them through the class using the curriculum that I put on Github.   This mostly worked, but there was a bug in the first class where some of their notes didn&rsquo;t save.   This software is really valuable for parents to see what&rsquo;s going on, and it gives me a way to communicate and guide the class.  This code isn&rsquo;t available yet but I plan to put it online in a few weeks.</p>

<h2>Second Class</h2>

<p>The goal of the next class is to introduce them to <a href="http://scratch.mit.edu">MIT Scratch</a> which is a visual environment for learning to make games and animations.  I&rsquo;m working on the curriculum now, so check back in a week or so to see how that went.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[An Open Source Coding Curriculum]]></title>
    <link href="http://douglastarr.com/an-open-source-coding-curriculum/"/>
    <updated>2013-10-27T11:48:00-07:00</updated>
    <id>http://douglastarr.com/an-open-source-coding-curriculum</id>
    <content type="html"><![CDATA[<p><img src="https://github.global.ssl.fastly.net/images/modules/training/professortocat.png" alt="Github Teacher Logo" /></p>

<p>One of the biggest challenges in teaching a coding class is the curriculum.  What are the kids going to do during each class?  How do we keep them challenged?  Is the class something that they enjoy, or not?</p>

<h2>Discovering Curriculums Online</h2>

<p>I have been feverishly searching the internet for a coding curriculum that works for an in-person coding class.  There are a lot of resources that are geared toward online classes, but very few for in person classes.</p>

<p>There are a lot of people thinking about this same problem right now.  Every day, I hear about parents and teachers trying to teach their kids to code, and going online to figure out how to do it.</p>

<h2>Coding Curriculum on GitHub</h2>

<p>I&rsquo;m putting the <a href="https://github.com/tarr11/coding-lessons">curriculum I&rsquo;m building</a> on Github so that other parents and teachers can learn from it, or use it for their own needs.  <a href="https://github.com">Github</a> is a tool that is used by software developers to share and discover code.  But, it&rsquo;s also great for sharing and discovering any &ldquo;structured&rdquo; data.  Since I&rsquo;m using github, you can change the curriculum as you need for your own purposes (just sign up for a Github account and then click the &ldquo;Fork&rdquo; button on the project)</p>

<p>My curriculum is fairly straightforward &ndash; it&rsquo;s a way to guide me through an 90 minutes with 4 or 5 kids.  I&rsquo;ve decided to use GitHub to host the curriculum, and I&rsquo;m using a simple language called MarkDown to write the curriculum.  MarkDown is like HTML, but a bit easier to write.  For instance, you can just write text, with no formatting, and it&rsquo;s smart enough to make things format fairly nicely.  It also supports most of the basic web formats you&rsquo;d expect &ndash; images, links, etc.  It&rsquo;s a bit more technical than writing an email (since there are a few special codes) but if you are teaching a coding class, you probably won&rsquo;t mind a few more codes, right?</p>

<p>I&rsquo;m writing the curriculum as I go, since I need to see how students respond to each class to structure the next one.  My best guess on how the class will go is available on Github.  You can &ldquo;star&rdquo; the repository on Github if you want to follow along as i change it.  You can also use the <a href="https://github.com/tarr11/coding-lessons/issues">Issues feature</a> of Github to provide comments on the curriculum itself.  Finally, if you want to make your own curriculum, you can <a href="https://github.com/tarr11/coding-lessons/fork">Fork it</a> and make your own.  There will be a lot of changes (until the end of December 2013) so beware if you are trying to stay &ldquo;in sync&rdquo; with me.</p>

<p>View the curriculum here:</p>

<h3><a href="https://github.com/tarr11/coding-lessons/tree/master/4th-grade-coders">4th Grade Coding Class on Github</a></h3>

<h2>CodeClub software</h2>

<p>A few months ago, it was Eli&rsquo;s birthday, and we invited his friends over to play MineCraft.  I brought out some of my old laptops, and some of the kids brought their own.  I tried to get everyone setup to play Minecraft on our network, and that took some time, even with just 8 or 10 kids.</p>

<p>What I learned from that experience was that even having some basic links and setup in a web browser can go a long way to making the class more effecient.</p>

<p>The kids I&rsquo;m working with don&rsquo;t all have email addresses &ndash; so I need a way to communicate with them as well, give them links, and give parents a way to follow what their kids are working on.</p>

<p>So, I&rsquo;ve decided to write some software called <a href="http://github.com/tarr11/codeclub">CodeClub</a> that lets you pull in any ccurriculum available on Github and use it to run your own class. The software will be free, open source, and MIT licensed.  Right now, that repository is blank since the code is pretty rough.</p>

<p>CodeClub is what we are going to be using in the class.  Once it&rsquo;s a little better, I&rsquo;ll put it up with some instructions on how you can easily host it yourself.</p>

<p>First class starts tomorrow, we are all very excited to get started.  Stay tuned on my blog to learn how it goes.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3 Types of Programming Classes for Kids]]></title>
    <link href="http://douglastarr.com/3-types-of-programming-classes-for-kids/"/>
    <updated>2013-10-24T09:43:00-07:00</updated>
    <id>http://douglastarr.com/3-types-of-programming-classes-for-kids</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been doing a lot of research on how to effectively make a curriculum for the 4th Graders that I am teaching.  Turns out, it&rsquo;s not easy!</p>

<p>I&rsquo;ve been struggling to figure out what my role is in this experience.  For example, there are many <a href="http://en.wikipedia.org/wiki/Massive_open_online_course">MOOCs</a> (<a href="http://khanacademy.org">Khan Academy</a>, <a href="http://codeacademy.com">Code Academy</a> ) out there that essentially provide a self-directed learning environment.  There are some hybrid environments like <a href="http://tynker.com">Tynker</a> that provide a more structured environment which helps teachers run a larger class, but still get into some depth around programming.  It would be a waste of time for me to have them just simply turn on computers and point them at Khan Academy.</p>

<p>My experience watching my children try to use these tools is that they work well for everything &hellip; except programming.  It is really hard to make a perfectly self-contained, understandable, modular programming environment where the kids don&rsquo;t go off the rails.  That said &ndash; they are great to use when someone can help get past roadblocks, bugs in software, and design issues that make the software confusing. I think online or self-directed curricula are very important, but I think that if kids (especially younger kids) are left to their own on these programs, they will get stuck and discouraged, even with the best designed programs.</p>

<p>So, where does that leave us?  Can we adopt an online curriculum for our class or do we have to build our own?<br/>
There are some curricula out there, especially built around tools like <a href="http://scratch.mit.edu">MIT Scratch</a>.
The curriculum you use or develop is highly dependent on the kind of structure you put towards your class.  This stuff is probably pretty obvious to anyone who has been involved professionally in education (teachers, etc) but it&rsquo;s a new discovery for me.</p>

<p>I would categorize the curriculum into 3 groups (classes, teams, and clubs)</p>

<h2>The Class</h2>

<p>The entire class is going to be learning the exact same thing, at the same time.  This seems to be the model taken by schools.  It&rsquo;s also a valuable way to go if you have a large group of kids (more than 8 or 10) since you really won&rsquo;t have the time to give them individual attention.  You are trading some creativity and self-direction for scale.  It&rsquo;s also harder to get kids to be excited by a class.</p>

<h2>The Team</h2>

<p>You are teaching them some skills but there&rsquo;s a lot of free time and everyone need not learn the same thing.  There&rsquo;s a concept of working together as a team and collaborating.  Teams can be smaller, and different kids can specialize in different areas.  There&rsquo;s a sense of grouping by age and at the end of the &ldquo;season&rdquo; you should have learned some valuable skills.  You might have a competition or challenge as well.</p>

<h2>The Club</h2>

<p>You are there to provide some resources and keep everyone moving forward, but it&rsquo;s more self-directed.  My guess is that this model works really well in high school, where the kids have self-selected into wanting to participate and have the ability to solve more in depth problems on their own.  You are offering lots of opportunities and an environment for individual creativity and collaboration.</p>

<p>For the <a href="http://douglastarr.com/categories/mvcoders">MVCoders</a> group, I am going to use the &ldquo;Team&rdquo; approach since I am dealing with a small group of motivated kids.</p>

<h2>Future Questions To Address</h2>

<ul>
<li>Visual Programming Languages (ie, Scratch) vs Text based Languages (javascript)</li>
<li>What is an appropriate amount of &ldquo;help&rdquo; to give students</li>
<li>As a developer, how much custom code should I be writing myself?</li>
<li>What is the relationship of a coding class to other traditional classes?</li>
<li>What expectations does everyone (parents, kids, teachers, etc) have for the class?</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Teaching Coding to 4th Graders]]></title>
    <link href="http://douglastarr.com/Teaching-Coding-to-4th-graders/"/>
    <updated>2013-10-12T00:00:00-07:00</updated>
    <id>http://douglastarr.com/Teaching-Coding-to-4th-graders</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve decided to teach coding to some 4th graders after school, including my son and about 7 other kids.</p>

<p>My background is as a software developer, but teaching is new to me.</p>

<p>So, I&rsquo;m planning on writing some blog entries to keep notes on what I&rsquo;ve learned and how I&rsquo;m structuring the class.  You can follow along about it using the <a href="http://douglastarr.com/categories/mvcoders">mvcoders</a> tag in my blog.</p>

<p>My son really enjoys Minecraft, to the point where he religiously watches every &ldquo;How-To&rdquo; video on YouTube about fun ways to use Redstone and Command Blocks to do neat things.</p>

<p>I really want to encourage kids to have fun programming.  It is so much different now and there are a ton of resources to use that don&rsquo;t require kids to get immersed in the guts of the OS to learn some basic coding.</p>

<p>My challenge has been to find a good curriculum to teach, and figure out how to best structure for the class so that all of the kids have a great experience.</p>

<p>Resources I&rsquo;m looking at using:</p>

<ul>
<li><a href="http://scratch.mit.edu/">Scratch</a> &ndash; This is a visual programming language with a very active community, centered around making games.   There&rsquo;s a lot of resources to help make the class.</li>
<li><a href="https://www.khanacademy.org/cs">Khan Academy CS</a> &ndash; There is a great new environment in Khan Academy that helps kids learn javascript.  My sense is this would be good for some of the advanced kids.</li>
<li><a href="http://www.codecademy.com/">CodeAcademy</a> &ndash; Similar to Khan Academy, this site helps people learn javascript (and other languages) in a step by step environment.</li>
</ul>


<p>I&rsquo;ve also been intrigued by using MineCraft directly in the class.  You can do a lot of interesting programming and logic exercises simply by using Redstone and Command Blocks.  That said, there&rsquo;s no real guard rails here and I&rsquo;m pretty sure as soon as I let the kids go play MineCraft, they&rsquo;d go off and do whatever they wanted.</p>

<p>There&rsquo;s an open source / javascript version of MineCraft called <a href="http://voxeljs.com/">Voxel.js</a>.  I&rsquo;ve tried this with my son, and though it was cool, I am not sure it&rsquo;ll work for a class.  It looks very similar to Minecraft but doesn&rsquo;t have all the features.  I am a bit worried that they will be disappointed by this.  I like it because it will get them to learn a greater part of the coding toolchain (node.js, text editors, html5, javascript, etc) whereas tools like Scratch hide all of that.  I might introduce it later in the cycle if the kids find Scratch too limiting.  Similarly, there are a lot of open source javascript frameworks for gaming.  I haven&rsquo;t looked too closely into these so I&rsquo;m not sure that they&rsquo;ll work.</p>

<p>I&rsquo;m also looking into &ldquo;physical&rdquo; devices such as Arduino, Lego Mindstorm, or Raspberry Pi to introduce hardware concepts and give them something real to play with.   This might be too ambitious for this class (which is only one day a week for 1.5 hours after school) so perhaps I will do that in another class.</p>

<p>If you know of any other resources (around curriculum, tools, or generally understanding the mindset of a 4th grader), please share in the comments!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Your idea is a virus - but not in a good way]]></title>
    <link href="http://douglastarr.com/Ideas-are-a-virus-but-not-in-a-good-way/"/>
    <updated>2013-10-08T00:00:00-07:00</updated>
    <id>http://douglastarr.com/Ideas-are-a-virus-but-not-in-a-good-way</id>
    <content type="html"><![CDATA[<p>As I&rsquo;ve gone from one startup to another, I&rsquo;ve tended to think of ideas as &ldquo;viral&rdquo;.</p>

<p>What I thought that meant was that they spread from one person to the next.</p>

<p>I&rsquo;ve come to understand that ideas are more than just a meme that spreads from person to person, destined to provide fame and riches.</p>

<p>Ideas can be destructive, and foolish, and completely irrational.</p>

<p>Like the flu, once an idea takes hold, it can be hard to get rid of.</p>

<p>You get a fever, you can&rsquo;t see clearly, and you often don&rsquo;t make sense to others.  You might even be hallucinating.</p>

<p>It&rsquo;s really a kind of sickness.  Many founders will often describe themselves as kind of insane, or ill, or something.</p>

<p>They will hallucinate that they are changing the world.</p>

<p>So, be careful about letting your startup idea consume you completely.  You&rsquo;ll get sick and distracted and the fever may not break for months or years.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A simple way to save time at work]]></title>
    <link href="http://douglastarr.com/A-simple-way-to-save-time-at-work/"/>
    <updated>2013-10-03T00:00:00-07:00</updated>
    <id>http://douglastarr.com/A-simple-way-to-save-time-at-work</id>
    <content type="html"><![CDATA[<p>It&rsquo;s a good idea to create a list of questions and answers that people commonly ask you at work.</p>

<p>This will save you time and some grief from constant interruption.</p>

<ul>
<li>Create a page or document somewhere (any tool will do), and call it &ldquo;My FAQ&rdquo;.  (Obviously replace &ldquo;My&rdquo; with our name)</li>
<li>Add it to your email signature as a link, and whatever other social tools people can discover you by (your GChat handle, etc)</li>
<li>When new questions come in from people (from any channel), make sure to write them down in your FAQ first.  Then, instead of answering them directly, send a link to the appropriate FAQ article.</li>
<li>Put a link on your FAQ to prompt people to say &ldquo;Thanks&rdquo;.  This will encourage you to keep up your FAQ.</li>
</ul>


<p>Once you&rsquo;ve started to do this, you&rsquo;ll get in the habit and find that the time you save makes up for time spent adding to your FAQ.</p>

<p>What tricks do you use to save time at work?</p>

<p>PS- If you would like a tool that can help you build your own personal FAQs at work, you can try <a href="https://corpqna.com">CorpQNA</a>.  It will create and maintain your FAQ for you, let you share it, and do a lot of Q&amp;A stuff that you might expect if your team really gets into it.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coding vs Writing]]></title>
    <link href="http://douglastarr.com/coding-vs-writing/"/>
    <updated>2013-09-16T00:00:00-07:00</updated>
    <id>http://douglastarr.com/coding-vs-writing</id>
    <content type="html"><![CDATA[<p>As someone who sits in front of a computer all day, I should be writing more on my blog.</p>

<p>When I am coding, I am in a comfortable environment (Visual Studio) and workstation is completely setup for writing</p>

<p>I have always struggled with a good environment for writing.  Currently, I switch between vim and Sublime Text, but I don&#8217;t really find either of those to be effective, since they are lacking tools to help me lookup things and integrate them into my workflow.</p>

<p>It&#8217;s pretty clear that if I am going to write more, it needs to be as easy as coding.</p>

<p>What do you do to make writing easier?</p>

<p>Update! I just discovered <a href ="http://prose.io">Prose.io</a> which is a nice little content editor for github pages.  Perfect!</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chromecast Screensaver]]></title>
    <link href="http://douglastarr.com/chromecast-screensaver/"/>
    <updated>2013-08-23T00:00:00-07:00</updated>
    <id>http://douglastarr.com/chromecast-screensaver</id>
    <content type="html"><![CDATA[<p>I recently got a Google Chromecast, and was looking for a way to push custom images as a screensaver for it.</p>

<p>Though there&#8217;s no obvious &#8220;set it and forget it&#8221; that runs headless, you can easily run the built-in
<a href="https://clients3.google.com/cast/chromecast/home">Chromecast wallpapers</a> in FullScreen mode.</p>

<p>Just click to that page, use the Chromecast extension, and type F11 to put it in full screen mode. </p>

<p><a href="http://www.techhive.com/article/2045755/7-browser-tricks-to-get-the-most-out-of-your-chromecast.html">Hat Tip - TechHive.com</a></p>

<p>If you discover any Chromecast Screensaver apps, please add them in the comments!</p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rails vs CSharp]]></title>
    <link href="http://douglastarr.com/rails-vs-csharp/"/>
    <updated>2013-07-14T00:00:00-07:00</updated>
    <id>http://douglastarr.com/rails-vs-csharp</id>
    <content type="html"><![CDATA[<p>In which I write a few thoughts on Rails v CSharp</p>
<p>I originally published this on Seattle Tech Startups mailing list</p>
<ul>
<li>The market in Seattle is distorted with a lot more startup oriented .NET devs than you will see in just about any other city.</li>
<li>When I tell people that I work on .NET startups in SF, and they are Rails devs, they look at me like I&#8217;m crazy and building my app in COBOL.NET.  They still think ASP.NET == WebForms.</li>
<li>BizSpark is offering effectively 3 years of free hosting to startups.  This is changing the market and getting more new companies to try out .NET</li>
<li>The dynamic features of the CLR / .NET still are not as useful as the dynamic features of Rails.</li>
<li>ASP.NET MVC / WebAPI is on par with Rails</li>
<li>Entity Framework Code First is not as good as Active Record.</li>
<li>People&#8217;s faith in Rails security has been shaken this year by a series of apocolyptic security flaws.</li>
<li>.NET security is very good.</li>
<li>The user model in rails is more extensible and well thought out than the off-the-shelf ASP.NET model.</li>
<li>The rubygems ecoysystem is better than the nuget ecosystem, (and probably always will be)</li>
<li>is mitigated by a lot of javascript based services that function the same way as a gem might.</li>
<li>Azure no longer sucks.</li>
<li>If you believe in OSS as a core part of your being, you will always feel second rate in the .NET world, compared to the Ruby world.</li>
</ul>




]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ASP.NET MVC Best Practices]]></title>
    <link href="http://douglastarr.com/aspnet-mvc-best-practices/"/>
    <updated>2013-07-11T00:00:00-07:00</updated>
    <id>http://douglastarr.com/aspnet-mvc-best-practices</id>
    <content type="html"><![CDATA[<p>This is work-in-progress list of my ASP.NET Best Practices. They each deserve more explanation plus code samples, which I will eventually write and link to.</p>

<div class="row">

<div class="offset1 span4">
<blockquote class="twitter-tweet"><p>Make your <a href="http://t.co/hdxeE4s5KY">http://t.co/hdxeE4s5KY</a> Controllers partial classes + ViewModels and Actions in the same file <a href="https://twitter.com/search?q=%23dotnet&amp;src=hash">#dotnet</a></p>&mdash; Douglas Tarr (@tarr11) <a href="https://twitter.com/tarr11/statuses/355373348609470466">July 11, 2013</a></blockquote>
</div>

<div class="span4">
<blockquote class="twitter-tweet"><p>Make your service class partial and keep DTOs and service methods as method-per-file <a href="https://twitter.com/search?q=%23dotnet&amp;src=hash">#dotnet</a></p>&mdash; Douglas Tarr (@tarr11) <a href="https://twitter.com/tarr11/statuses/355373477232001025">July 11, 2013</a></blockquote>
</div>
</div>

<div class="row">
<div class="offset1 span4">
<blockquote class="twitter-tweet"><p>Use ICollection or IList to avoid leaking your Entity Framework IQueryable into your Controller and View <a href="https://twitter.com/search?q=%23dotnet&amp;src=hash">#dotnet</a></p>&mdash; Douglas Tarr (@tarr11) <a href="https://twitter.com/tarr11/statuses/355376435436847104">July 11, 2013</a></blockquote>
</div>

<div class="span4">
<blockquote class="twitter-tweet"><p>Create a service per resource (db, search, email, etc) and a master service that your controller calls <a href="https://twitter.com/search?q=%23dotnet&amp;src=hash">#dotnet</a></p>&mdash; Douglas Tarr (@tarr11) <a href="https://twitter.com/tarr11/statuses/355377591961661441">July 11, 2013</a></blockquote>
</div>
</div>

<div class="row">
<div class="offset1 span4">
<blockquote class="twitter-tweet"><p>Avoid the code-&gt;run-&gt;debug loop by creating an integration suite to write your db / search / querying code <a href="https://twitter.com/search?q=%23dotnet&amp;src=hash">#dotnet</a></p>&mdash; Douglas Tarr (@tarr11) <a href="https://twitter.com/tarr11/statuses/355378129721753600">July 11, 2013</a></blockquote>
</div>
<div class="span4">
	<blockquote class="twitter-tweet"><p>Use ViewModels to keep logic out of your views and make them more testable <a href="https://twitter.com/search?q=%23dotnet&amp;src=hash">#dotnet</a></p>&mdash; Douglas Tarr (@tarr11) <a href="https://twitter.com/tarr11/statuses/355390310236430337">July 11, 2013</a></blockquote>
</div>

</div>

<script async src="http://douglastarr.com//platform.twitter.com/widgets.js" charset="utf-8"></script>




]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[An intercom.io playbook]]></title>
    <link href="http://douglastarr.com/my-intercom-playbook/"/>
    <updated>2013-07-04T00:00:00-07:00</updated>
    <id>http://douglastarr.com/my-intercom-playbook</id>
    <content type="html"><![CDATA[	<p>At <a href="https://corpqna.com">CorpQNA</a>, we use <a href="http://intercom.io">intercom.io</a> to manage our web CRM.  It&#8217;s a fairly sophisticated product, and there are a few tricks that I&#8217;ve learned that I thought that I would share.</p>

	<h3>Send out your newsletters using tags</h3>
		<p>Avoid using the &#8220;manual&#8221; message to send newsletters.	Using tags lets you easily control large sends, and then also lets you repurpose your content for future users.</p>
		<ul>
			<li>Create a new tag, and tag yourself with it, that says &#8220;Blue Newsletter&#8221;.</li>
			<li>Write your email, and target it at people only with the &#8220;Blue Newsletter&#8221; tag.</li>
			<li>Tag some small % of your users with the &#8220;Blue Newsletter&#8221; and watch open / click rates.</li>
			<li>Monitor open / click rates via intercom.</li>
			<li>Once you are happy with your results - resend it to the whole group.</li>
		</ul>	


	<h3>Use LastContacted to reduce email overload</h3>
		<p>It can be overwhelming to put together a DRIP campaign for your website.  Given intercom&#8217;s interface, it&#8217;s kind of hard to know who is going to receive what message, at what time.</p>

		<p>What this often leads to is users being blasted by multiple emails in too short of a time period.</p>

		<p>Intercom has a field called LastContacted.  In all of your Auto messages, just make sure LastContact > 3 days, so that you don&#8217;t contact your users more than every 3 days, regardless of whatever other rules you&#8217;ve setup.</p>

	<h3>Use a big call to action near the top of your newsletter</h3>

		<p>We&#8217;ve found that most users click the first big link they see.  Maybe this is because they don&#8217;t read the whole newsletter, maybe because they are trained that way, who knows.  In any case, it&#8217;s good to take advantage of that by putting a big call to action in a large font right near the top of your newsletter.  It will probably get the most clicks.</p>

	<h3>Tag your links with Google Analytics Campaigns</h3>
		<p>Assuming you use Google Analytics, you can tag each link separately with the utm_* keywords.  This lets you see how each link is doing.</p>

	<h3>Use Intercom as a lightweight email list for your leads</h3>
		<p>If you have users who are not using your product, but perhaps have signed up for your newsletter, make sure they are on your list by dropping your intercom javascript on the &#8220;Thank you&#8221; page.  Mark these users separate from logged in users.  Beware, though.   With the new intercom pricing, this can be prohibitive since you may have a lot more people signing up for your mailing list than actually using your product, and you are charged by the active user.</p>

	<h3>Copy the intercom playbook</h3>
		<p>If you don&#8217;t know what to do with your email campaign, start by copying the experts.  Here&#8217;s a <a href="http://insideintercom.io/does-your-app-have-a-message-schedule/">great article from intercom</a> on some ideas to include in your campaign.</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Create a repo for each idea]]></title>
    <link href="http://douglastarr.com/create-a-repo-per-idea/"/>
    <updated>2013-04-29T00:00:00-07:00</updated>
    <id>http://douglastarr.com/create-a-repo-per-idea</id>
    <content type="html"><![CDATA[<p>Each time you have a new idea, put your notes in a repo for it, instead of simply storing it Dropbox or on your local computer.</p>

<p>If it&#8217;s an open source project, push that repo to Github.  Then you can advertise it on a public repository like Github, and actually start working on it and without having it complete.</p>

<p>This will get you started quicker, and when you have some time or you want to go back to that project, it will be all ready for you.</p>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Azure Websockets 302 Error]]></title>
    <link href="http://douglastarr.com/azure-websockets-302-error/"/>
    <updated>2013-03-20T00:00:00-07:00</updated>
    <id>http://douglastarr.com/azure-websockets-302-error</id>
    <content type="html"><![CDATA[<div>If you see an azure websockets error where it falls back to long polling , you need to make sure you set your app to use .NET 4.5 in your web.config</div><p /><div><div>    &lt;httpRuntime targetFramework=&quot;4.5&quot; requestValidationMode=&quot;2.0&quot; /&gt;</div> <p /></div> 
fdsf]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using powershell 3 Invoke-RestMethod with Basic Authentication and JSON]]></title>
    <link href="http://douglastarr.com/using-powershell-3-invoke-restmethod-with-basic-authentication-and-json/"/>
    <updated>2013-03-05T00:00:00-08:00</updated>
    <id>http://douglastarr.com/using-powershell-3-invoke-restmethod-with-basic-authentication-and-json</id>
    <content type="html"><![CDATA[<div>This took me a remarkably long time to figure out.  Enjoy!</div><p><div>$user = &quot;myuserid&quot;<br /></div><div>$pass= &quot;mypass&quot;</div><div>$uri = &quot;<a href="https://myresturi.com/api/something">https://myresturi.com/api/something</a>&quot;</div> <p><div>$json = &quot;{</div><div>            &quot;&quot;foo&quot;&quot; : &quot;&quot;bar&quot;&quot;</div><div>          }&quot; <br /></div><p><div>$secpasswd = ConvertTo-SecureString $user -AsPlainText -Force</div> <div>$cred = New-Object System.Management.Automation.PSCredential ($pass, $secpasswd)</div><p><div>Invoke-RestMethod -Uri <a href="https://api.intercom.io/v1/users">https://api.intercom.io/v1/users</a> -Method Post -Credential $cred -ContentType &quot;application/json&quot; -Body $json </div> </p></p></p></p> 
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting IPRestrictions in a Windows Azure Cloud App Deployment]]></title>
    <link href="http://douglastarr.com/setting-iprestrictions-in-a-windows-azure-cloud-app-deployment/"/>
    <updated>2013-02-24T00:00:00-08:00</updated>
    <id>http://douglastarr.com/setting-iprestrictions-in-a-windows-azure-cloud-app-deployment</id>
    <content type="html"><![CDATA[<div>To set IP Restrictions in Windows Azure, you have to do 2 things, create an azure startup task in your service configuration (.cscg file), and a cmd file that runs it.</div>
<p />
<div><strong>Create a Service Configuration Startup Task to run a startup command</strong></div>
<div>
<div>&nbsp; &nbsp; &lt;Startup&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &lt;Task commandLine=&#8221;startup\ip-restrictions.cmd&#8221; executionContext=&#8221;elevated&#8221;&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;Environment&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;Variable name=&#8221;EMULATED&#8221;&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;RoleInstanceValue xpath=&#8221;/RoleEnvironment/Deployment/@emulated&#8221; /&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/Variable&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;Variable name=&#8221;RESTRICTIP&#8221;&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;RoleInstanceValue xpath=&#8221;/RoleEnvironment/CurrentInstance/ConfigurationSettings/ConfigurationSetting[@name=&#8217;RestrictIp&#8217;]/@value&#8221;/&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/Variable&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/Environment&gt;</div>
<div>&nbsp; &nbsp; &nbsp; &lt;/Task&gt;</div>
<div>&nbsp; &nbsp; &lt;/Startup&gt;</div>
<p />
</div>
<div>
<div><strong>Create a startup command</strong>&nbsp;</div>
<p />
<div>This startup command checks the &#8220;RESTRICTIP&#8221; variable so that you can have different deployments that you can set whether or not to restrict IPs by (beta, test, production, etc). &nbsp;It also bypasses this if you are running the Azure Emulator.</div>
<p />
<div>This installs the IP Restriction Windows Role, unlocks the IIS Config, and sets the appropriate IP Restrictions (put your IP in place of 1.2.3.4)</div>
<p />
<p />
<div>
<div>if &#8220;%RESTRICTIP%&#8221;==&#8221;false&#8221; goto :EOF</div>
<div>if &#8220;%EMULATED%&#8221;==&#8221;true&#8221; goto :EOF</div>
<p />
<div>powershell Install-WindowsFeature Web-IP-Security</div>
<div>%windir%\system32\inetsrv\AppCmd.exe unlock config -section:system.webServer/security/ipSecurity</div>
<div>
<div>%windir%\system32\inetsrv\AppCmd.exe set config -section:system.webServer/security/ipSecurity /~ /commit:apphost</div>
</div>
<div>%windir%\system32\inetsrv\AppCmd.exe set config -section:system.webServer/security/ipSecurity /allowUnlisted:false /commit:apphost</div>
<div>%windir%\system32\inetsrv\AppCmd.exe set config -section:system.webServer/security/ipSecurity /+&#8221;[ipAddress=&#8217;1.2.3.4&#8217;,allowed=&#8217;True&#8217;]&#8221; /commit:apphost</div>
</div>
<p />
<p />
<div>This particular solution will not work well if you are trying to have IP restrictions on your staging deployment, and not your production deployment, since the startup command only runs on a deploy, and you will likely just swap VIPs to go from staging to production.</div>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Don't prototype on your own platform]]></title>
    <link href="http://douglastarr.com/don-t-prototype-on-your-own-platform/"/>
    <updated>2013-02-16T00:00:00-08:00</updated>
    <id>http://douglastarr.com/don-t-prototype-on-your-own-platform</id>
    <content type="html"><![CDATA[<p>When building a new feature for your website, avoid using the legacy platform that the rest of the site is built on. </p> <p>Legacy integrations take longer. Your goal with a prototype is to validate if it&#39;s worthwhile. This will take more work if your integration exposes bugs or side effects in legacy systems. </p> <p>New designs get coupled to legacy issues. For instance, you may have a complex registration funnel for your main product. But your new feature may not require that, and might be better off with a simple process. You may find that the simpler registration feeds the more complex multi stage process, rather than pushing full registration for a new feature. </p> <p>Deep integrations can mask issues with your prototype. You may see user adoption, but only because the new feature is very visible to your installed base. The prototype might be flawed and produce false positive results because of the legacy integration. </p> <p>Modern platforms with better features are ignored. You may have a poor search function on your site. Requiring the prototype to use the legacy search isn&#39;t really necessary. You can take advantage of newer versions of software by limiting their use to your prototype. </p> <p>You can break legacy inertia with prototypes. If your prototype requires newer versions of platform components, you will build more company expertise in the new version. This will make it more likely that you can migrate legacy code to new versions. </p> <p>Build new prototypes in isolation, so that you can develop faster, learn more and make better product decisions. </p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Learn from success, avoid failure]]></title>
    <link href="http://douglastarr.com/learn-from-success-avoid-failure/"/>
    <updated>2013-02-04T00:00:00-08:00</updated>
    <id>http://douglastarr.com/learn-from-success-avoid-failure</id>
    <content type="html"><![CDATA[<p>It has become prevalent to use &#8220;failing fast&#8221; as jargon for &#8220;learning&#8221;. &nbsp;It is not valuable to fail. Failure means &#8220;lack of success&#8221;. It doesn&#8217;t mean learning.</p>
<p>When something fails, it is common to identify the failure, and then state that you learned from the failure.</p>
<p>You learn nothing from failure.</p>
<p>Perhaps you have a theory on why you&#8217;ve failed, then make an effort to fix the failure. If you are successful, you will have learned something.</p>
<p>You learned from the success, not the failure. &nbsp;Failure is not sufficient, or even required, for success.</p>
<p>To succeed, prefer to study success. &nbsp;Avoid studying failure, it is a waste of time.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why this is short]]></title>
    <link href="http://douglastarr.com/why-this-is-short/"/>
    <updated>2013-01-27T00:00:00-08:00</updated>
    <id>http://douglastarr.com/why-this-is-short</id>
    <content type="html"><![CDATA[<p>It&#8217;s easier to communicate an idea when it is simple and short.</p>
<p>It&#8217;s ok to write a few sentences, instead of a few paragraphs.</p>
<p>You will choose your words more carefully, and make fewer mistakes.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Quora Email Settings Anti-Pattern]]></title>
    <link href="http://douglastarr.com/quora-email-settings-anti-pattern/"/>
    <updated>2013-01-23T00:00:00-08:00</updated>
    <id>http://douglastarr.com/quora-email-settings-anti-pattern</id>
    <content type="html"><![CDATA[<div>I can only imagine the regression tests</div><p /><div>[[posterous-content:l5WOJymvRPJ4E81gnHeJ]]<br /></div> 
]]></content>
  </entry>
  
</feed>
